/**
 * Copyright (C) 2022 Anh Huy Ngo - All Rights Reserved
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * Author: Anh Ngo
 * Created Date: 
 */
////////////////////////////////////////////////////////////////////
// MODULE LOADING
////////////////////////////////////////////////////////////////////s

'use strict';
// var http = require('http');
var CONFIG = require('./config');

var ROUTE_IMPORT_CVE = require('./routes/importcve.js');
var ROUTE_VIEW_CVE_LIST = require('./routes/cvelist.js');
var ROUTE_ADMIN = require('./routes/admin.js');
var ROUTE_PROJECTS = require('./routes/projects.js');
var ROUTE_PRJ = require('./routes/prj.js');
var ROUTE_MODULES = require('./routes/modules.js');
var ROUTE_CVE = require('./routes/cve.js');

// var list_www = require('./routes/viewlist.js');
// var admin_www = require('./routes/admin.js');
// var addprj_www = require('./routes/addprj.js');
var multer  =  require('multer');
var ModDB = require('./db/db');


var COMMON = require('./common.js');
var ERR = require('./errno.js');

// var fs = require('fs');
var express = require('express');

var PATH = require('path');

////////////////////////////////////////////////////////////////////
// GLOBAL VARIABLES
////////////////////////////////////////////////////////////////////


var Config = CONFIG.Config;

var log = require('./log').build("app");

// var BODYPARSER = require('body-parser');




var ROUTE_HOME = "";
var ROUTE_ABOUT = "about";
// var ROUTE_IMPORTCVE = "";

const HTTP_CODE_OK = 200;
const HTTP_CODE_HANDLE_FAIL = 400;

// TODO: check and re-setup path if excute app.js from other folder, not app.js folder
var handlebars = require('express3-handlebars').create({
    defaultLayout:'main',
    helpers: {
        section: function(name, options){
            if(!this._sections) this._sections = {};
            this._sections[name] = options.fn(this);
            return null;
        },
        copyrightYear: function() {
            return new Date().getFullYear();
        },
        version: function() {
            return "1.0";
        },
    }
});

var storageUpload =   multer.diskStorage({
    destination: function (req, file, callback) {
      callback(null, CONFIG.getUploadLocation());
    },
    filename: function (req, file, callback) {
      callback(null, file.fieldname + '-' + Date.now());
    }
  });
  
var upload = multer({ storage : storageUpload});


var routemap = {};

////////////////////////////////////////////////////////////////////
// FUNCTION
////////////////////////////////////////////////////////////////////



function homepage_get(req, res, next){
    log.d("Home page req get")
    res.render('home', {
        title: 'HOME'
    })
}

function about_get(req, res, next){
    log.d("About req get")
    res.render('about');
}

function responseMsg(res, ret, msg){
    log.d(`responseMsg ${ret}, ${msg}`)
    if (ret == ERR.ErrNone){
        res.status(200);
    }
    else{
        res.status(HTTP_CODE_HANDLE_FAIL);
    }
    res.json({
        code:ret,
        msg:msg
    });
}


function init_route_map(){
    routemap[ROUTE_HOME] = [homepage_get, homepage_get];
    routemap[ROUTE_ABOUT] = [about_get, about_get];
    routemap[ROUTE_IMPORT_CVE.ROUTE_NAME] = [ROUTE_IMPORT_CVE.handleReq, ROUTE_IMPORT_CVE.handlePost];
    routemap[ROUTE_VIEW_CVE_LIST.ROUTE_NAME] = [ROUTE_VIEW_CVE_LIST.handleReq, ROUTE_VIEW_CVE_LIST.handlePost];
    routemap[ROUTE_ADMIN.ROUTE_NAME] = [ROUTE_ADMIN.handleReq, ROUTE_ADMIN.handlePost];
    routemap[ROUTE_PROJECTS.ROUTE_NAME] = [ROUTE_PROJECTS.handleReq, ROUTE_PROJECTS.handlePost];
    routemap[ROUTE_PRJ.ROUTE_NAME] = [ROUTE_PRJ.handleReq, ROUTE_PRJ.handlePost];
    
    routemap[ROUTE_MODULES.ROUTE_NAME] = [ROUTE_MODULES.handleReq, ROUTE_MODULES.handlePost];
    routemap[ROUTE_CVE.ROUTE_NAME] = [ROUTE_CVE.handleReq, ROUTE_CVE.handlePost];
}

function handle_get_post(req, res,next, get=true){
    var path = req.path.substring(1);
    log.d(`path: '${path}'`);
    log.d(routemap)
    if (routemap.hasOwnProperty(path)){
        var router = null;
        if (get) router = routemap[path][0];
        else router = routemap[path][1]
        router (req, res, next);
    }
    else{
        log.e(`'${path}' not in route map`);
        res.status(404);
        res.render('404');
    }
}

/**
 * MAIN FUNCTION
 */
function main(){
    COMMON.setAppRoot(PATH.resolve(__dirname));

    var app = express()

    app.set('port', process.env.PORT || Config.PORT);



    app.engine('handlebars', handlebars.engine);
    app.set('view engine', 'handlebars')
    app.use(express.static(__dirname + '/views'));

    app.use(express.json());


    app.get("/*", function(req, res, next){
        log.d("GET request " + req.path);
        handle_get_post(req, res, next);
    });


    app.post("/*", function(req, res, next){
        log.d("POST request " + req.path);
        handle_get_post(req, res, next, false);
    });


    // custom 404 page
    app.use(function(req, res){
        res.status(404);
        res.render('404');

    });

    // custom 500 page
    app.use(function(err, req, res, next){
        console.error(err.stack);
        res.type('text/plain');
        res.status(500);
        res.send('500 - Server Error');
    });

    ModDB.initDB();

    init_route_map();

    app.listen(app.get('port'), function(){
        console.log( 'Express started on http://localhost:' +
        app.get('port') + '; press Ctrl-C to terminate.' );
    });
    

}

////////////////////////////////////////////////////////////////////
// MODULE EXPORT
////////////////////////////////////////////////////////////////////
module.exports.uploadfile = function(req, res, name, func){
    log.d("upload file")
    upload.single(name)(req, res, func);
};


exports.responseMsg = responseMsg;

////////////////////////////////////////////////////////////////////
// RUN
////////////////////////////////////////////////////////////////////

main();


