
'use strict';
////////////////////////////////////////////////////////////////////
// MODULE LOADING
////////////////////////////////////////////////////////////////////

var ERR = require("../errno");
var COMMON = require("../common");
const { markets } = require("../model/market");
var PROJECT_CTRL = require("../controller/project_ctrl");
var APP = require("../app");
////////////////////////////////////////////////////////////////////
// GLOBAL VARIABLES
////////////////////////////////////////////////////////////////////

var log = require("../log").build("prj");

const PARAM_REQ="req";

const REQ_ADD="add";
const REQ_UPDATE="update";
////////////////////////////////////////////////////////////////////
// FUNCTION
////////////////////////////////////////////////////////////////////

function handleReq(req, res, next){
    log.d("handleReq");
    var tags = ["VN", "EU", "USA"];
    PROJECT_CTRL.getListProjects(function(err, items){
        // Change render accoridng account type?
        var idx = (page - 1)*perpage + 1;
        res.render('editprj', {
            projects:items.map(function(item){
                return {
                    idx:idx++,
                    id:item.id,
                    name:item.name,
                    nameid:item.nameid,
                    desc:item.desc,
                    tag:item.getTag()
                }
            }),
            tags:tags,
        });
    });
    
    
}

function handlePost(req, res, next){
    log.d("handlePost");
    var action = null;
    if (req.query.hasOwnProperty(PARAM_REQ)){
        action = req.query[PARAM_REQ];
    }

    var jitem = req.body;
    var body = JSON.stringify(jitem, null, 2);

    log.d(`body ${body}`);
    var ret = ERR.ErrInvalid;
    var ret_msg = "Invalid input";
    if (action == "add"){
        var tags = [];
        if ((jitem.tags != undefined) && !COMMON.isEmpty(jitem.tags)){
            jitem.tags.forEach(element => {
                tags.push(element.trim());
            });
            // var taglist = jitem.tags.split(",");
            // if (!COMMON.isEmpty(taglist)){
            //     taglist.forEach(element => {
            //         tags.push(element.trim());
            //     });
            // }
        }
        var modules = [];
        if ((jitem.modules != undefined) && !COMMON.isEmpty(jitem.modules)){
            jitem.modules.forEach(element => {
                modules.push(element.trim());
            });
            // var taglist = jitem.tags.split(",");
            // if (!COMMON.isEmpty(taglist)){
            //     taglist.forEach(element => {
            //         tags.push(element.trim());
            //     });
            // }
        }

        log.d(`Tag: ${tags}`);
        log.d(`Module: ${modules}`);

        PROJECT_CTRL.addProject(jitem.name, jitem.desc, tags, modules, function(ret, item, ret_msg){
            APP.responseMsg(res, ret, ret_msg);
        });
    }
    else{
        APP.responseMsg(res, ret, ret_msg);
    }
    
}

////////////////////////////////////////////////////////////////////
// MODULE EXPORT
////////////////////////////////////////////////////////////////////

module.exports.handleReq = handleReq;
module.exports.handlePost = handlePost;
module.exports.ROUTE_NAME = "prj";