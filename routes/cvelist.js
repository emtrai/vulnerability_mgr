////////////////////////////////////////////////////////////////////
// MODULE LOADING
////////////////////////////////////////////////////////////////////

var ModCve = require("../model/cve/cve_db");
var log = require("../log").build("viewlist");

var ModProject = require("../model/project/project_db");
var CVE_CTRL = require("../controller/cve_ctrl");
var APP = require("../app");
////////////////////////////////////////////////////////////////////
// GLOBAL VARIABLES
////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////
// FUNCTION
////////////////////////////////////////////////////////////////////

async function getSearchStategy(callback){
    log.d("getSearchStategy");
    ModProject.getListProject(function(){
        
    });
    callback();
}
function handleReq(req, res, next){
    log.d("handleReq");
    page = 1;
    perpage = 10;

    getSearchStategy(function(){
        res.render('cvelist');
    });
    
}
const PARAM_PAGE = 'page';
const PARAM_PERPAGE = 'perpage';
const PARAM_SEARCH_KEY = 'key';
const PARAM_SEARCH_IN = 'in';
const PARAM_FILTER_PRJ = 'prj';
const PARAM_FILTER_COMP = 'comp';
const PARAM_FILTER_MODULE = 'mod';
const PARAM_FILTER_MARKET = 'mrk';
const PARAM_FILTER_SRC = 'src';
const PARAM_FILTER_TAG = 'tag';
var paramlist=[
    PARAM_PAGE
    ,PARAM_PERPAGE
    ,PARAM_SEARCH_KEY
    ,PARAM_SEARCH_IN
    ,PARAM_FILTER_PRJ
    ,PARAM_FILTER_COMP
    ,PARAM_FILTER_COMP
    ,PARAM_FILTER_MODULE
    ,PARAM_FILTER_MARKET
    ,PARAM_FILTER_SRC
    ,PARAM_FILTER_TAG
];

function handlePost(req, res, next){
    log.d("handlePost");

    page = 1;
    perpage = 10;
    if (req.query.hasOwnProperty(PARAM_PAGE)){
        page = req.query[PARAM_PAGE];
    }
    if (req.query.hasOwnProperty(PARAM_PERPAGE)){
        perpage = req.query[PARAM_PERPAGE];
    }
    log.d(`page ${page} perpage ${perpage}`);
    paramlist.forEach(function(element){
        
        if (req.query.hasOwnProperty(element)){
            log.d(`param ${element}: ${req.query[element]}`);
        }
        else
        {
            log.d(`param ${element} NOT FOUND`);
        }
    });
    
    var keyword = null;
    if (req.query.hasOwnProperty(PARAM_SEARCH_KEY)){
        keyword = req.query[PARAM_SEARCH_KEY];
    }
    CVE_CTRL.getCVEList(keyword, page, perpage).then((result) => {
        log.d(`Get CVE list callback`);

        var cves = result.cves;
        var totalpages = result.totalpages;
        var idx = (page - 1)*perpage + 1;
        res.json({
            totalpages:totalpages,
            page:page,
            startIdx:idx,
            cves:cves.map(function(cve){
                log.dumpArray(cve.modules, `Module list of ${cve.vul_id}`);
                return {
                    idx:idx++,
                    id:cve.id,
                    vul_id:cve.vul_id,
                    cve_id:cve.cve_id,
                    desc:cve.getDesc(),
                    ref:cve.getRef(),
                    tag:cve.getTag(),
                    source:cve.source,
                    modules:cve.modules,
                    projects:cve.projects,
                }})                    
        });
    });
}

////////////////////////////////////////////////////////////////////
// MODULE EXPORT
////////////////////////////////////////////////////////////////////
module.exports.handleReq = handleReq;
module.exports.handlePost = handlePost;
module.exports.ROUTE_NAME = "list";