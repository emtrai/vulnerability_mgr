const IMPORT_STATE_IDLE = 0;
const IMPORT_STATE_PREPARE = 1;
const IMPORT_STATE_PARSE = 2;
const IMPORT_STATE_DONE = 3;
const IMPORT_STATE_ERROR = -1;

const IMPORT_STATUS_STR = {
    [IMPORT_STATE_IDLE]:"Idle",
    [IMPORT_STATE_PREPARE]:"Prepare",
    [IMPORT_STATE_PARSE]:"Parsing",
    [IMPORT_STATE_DONE]:"Done",
    [IMPORT_STATE_ERROR]:"Error",
}


function updateStatus(msg){
    $("#divStatus").empty().html(msg);
}


function updateInfo(msg){
    $("#divInfo").empty().html(msg);
}

var importReqId = null;

function onSubmit(response, status, xhdr){
    log("onSubmit");
    // $("#status").empty().text(response);
    console.log(response);
    var reqStatus = response.status;
    var reqId = response.reqId;
    var statusStr = "Unknown";
    
    if (IMPORT_STATUS_STR.hasOwnProperty(reqStatus))
    {
        statusStr = IMPORT_STATUS_STR[reqStatus];
    } 
    var downloadLink = `<a href='importcve?importid=${reqId}' target="_blank" rel="noopener noreferrer">${reqId}</a>`;
    updateStatus(`Import req ${downloadLink}: ${statusStr}`);
    importReqId = reqId;
    setTimeout(function(){
        queryImportReqStatus(importReqId);
    }, 1000);
}
function onSubmitErr(request, status, error){
    log("onSubmitErr");
    // status('Error: ' + xhr.status);
    var msg = `${status}, ${error}, ${request.status}, ${request.responseText}`;
    updateStatus(msg);
    importReqId = null;
}

function onsumbit(){
    updateStatus("File is uploading...");
    $(this).ajaxSubmit({
        error: onSubmitErr,
        success: onSubmit
    });
    //Very important line, it disable the page refresh.
    return false;
}



function onQueryImportReqStatus(response, status, xhdr){
    log("onQueryImportReqStatus");
    console.log(response);
    var reqStatus = response.status;
    var reqId = response.reqId;
    var statusStr = "Unknown";
    
    if (IMPORT_STATUS_STR.hasOwnProperty(reqStatus))
    {
        statusStr = IMPORT_STATUS_STR[reqStatus];
    } 
    var downloadLink = `<a href='importcve?importid=${reqId}' target="_blank" rel="noopener noreferrer">${reqId}</a>`;
    updateStatus(`Import req ${downloadLink}: ${statusStr}`);
    if ((reqStatus == IMPORT_STATE_PARSE) && (importReqId != null)){
        setTimeout(function(){
            queryImportReqStatus(importReqId);
        }, 1000);
    }
    else{
        if (reqStatus == IMPORT_STATE_DONE)
        {            
            queryImportReqInfo(importReqId);
        }
        importReqId = null;

        
    }
    
}

function onQueryImportReqStatusErr(request, status, error){
    log("onQueryImportReqStatusErr");
    var msg = `${status}, ${error}, ${request.status}, ${request.responseText}`;
    updateStatus(msg);
    importReqId = null;
}



function queryImportReqStatus(reqId){
    log("queryImportReqStatus");
    var url = `/importcve?req=status&importid=${reqId}`;
    $.ajax(url, {
        dataType:'json',
        type:'POST',
        success:onQueryImportReqStatus,
        error: onQueryImportReqStatusErr,
    })
}



function onQueryImportInfo(response, status, xhdr){
    log("onQueryImportInfo");
    console.log(response);
    var summarize = response.summarize;

    var reqId = response.importId;
    var viewLink = `<a href='list?cond=${reqId}|import|importId' target="_blank" rel="noopener noreferrer">View ALL CVE</a>`;

    var txt = `${viewLink}\n${summarize}`;
    updateInfo(txt);
    
    
    
}

function onQueryImportInfoErr(request, status, error){
    log("onQueryImportInfoErr");
    var msg = `${status}, ${error}, ${request.status}, ${request.responseText}`;
    updateInfo(msg);
    
}
function queryImportReqInfo(reqId){
    log("queryImportReqInfo");
    var url = `/importcve?req=info&importid=${reqId}`;
    $.ajax(url, {
        dataType:'json',
        type:'POST',
        success:onQueryImportInfo,
        error: onQueryImportInfoErr,
    })
}

function deselectAllPrj(){
    $("#opPrj").val([]);
}
const ID_DIV_MODULE_CONTAINER = '#divModule_container';
const ID_TXT_MODULES = '#txtModule';
function getModuleList(){
    var spantags = $(ID_DIV_MODULE_CONTAINER).find("span");
    var modules = [];
    $.each(spantags, function(idx, ele){
        modules.push(ele.innerText);
    });
    return modules;
}

jQuery(function(){
    $(document).on("keydown", ":input:not(textarea)", function(event) {
        return event.key != "Enter";
    });

    $(document).ready(function() {
        $('#uploadForm').submit(function(e) {
            updateStatus("File is uploading...");
            
           var formData = new FormData($('#uploadForm')[0]);
           e.preventDefault(); 
           
           formData.append('modules', getModuleList());

           $.ajax({
               url:'/importcve?req=import',
               type: 'POST',
               contentType: false,
               processData: false,
               cache: false,
               data: formData,
               success: onSubmit,
               error: onSubmitErr
           })

           //Very important line, it disable the page refresh.
       return false;
       });     
   });

   $(ID_TXT_MODULES).on(
    {
        focusout: function(){
            var tagstr = this.value.replace(/[^a-zA-Z0-9\_\+\-\#\.\:]/i, '');
            if (tagstr){
                $("<span/>", {
                    text:tagstr,
                    appendTo:ID_DIV_MODULE_CONTAINER,
                    class:"dashfolio-tag"
                });

            }
            this.value="";
        },
        keyup:function(ev){
            if (/188|13/.test(ev.which)) $(this).focusout();  
        }
    })

    $(ID_DIV_MODULE_CONTAINER).on('click', 'span', function() {
        $(this).remove(); 
    });
    
})
